<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>My URLs | URL Shortener</title>
    <link rel="stylesheet" href="/css/myUrls.css" />
  </head>
  <style>
    /* üåà Base */
    body {
      margin: 0;
      font-family: "Poppins", sans-serif;
      color: #fff;
      background: rgba(0, 0, 0, 0.7);
      overflow-x: hidden;
    }

    /* üåÑ Background */
    .background-image {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: url("https://images.unsplash.com/photo-1522202176988-66273c2fd55f?auto=format&fit=crop&w=1920&q=80")
        no-repeat center center / cover;
      filter: brightness(0.4);
      z-index: -1;
    }

    /* üåê Header */
    .header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 20px 50px;
      background: rgba(255, 255, 255, 0.08);
      backdrop-filter: blur(20px);
      border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }

    .header .logo {
      font-size: 1.5rem;
      font-weight: 600;
      color: #00d4ff;
    }

    .header nav a {
      margin: 0 15px;
      text-decoration: none;
      color: #fff;
      font-weight: 500;
      transition: 0.3s;
    }

    .header nav a:hover {
      color: #00d4ff;
    }

    /* üåü Main Container */
    .container {
      padding: 80px 10%;
      text-align: center;
    }

    .container h1 {
      font-size: 2.2rem;
      margin-bottom: 30px;
      background: linear-gradient(135deg, #00d4ff, #0078ff);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
    }

    /* üåê URL Cards */
    .urls-list {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
      gap: 20px;
    }

    .url-card {
      background: rgba(255, 255, 255, 0.08);
      backdrop-filter: blur(20px);
      border-radius: 20px;
      padding: 25px;
      text-align: left;
      box-shadow: 0 8px 25px rgba(0, 0, 0, 0.4);
      transition: transform 0.3s;
    }

    .url-card:hover {
      transform: translateY(-8px);
    }

    .url-info a {
      color: #00d4ff;
      text-decoration: none;
    }

    .url-info a:hover {
      text-decoration: underline;
    }

    .delete-btn {
      margin-top: 15px;
      width: 100%;
      background: linear-gradient(135deg, #ff4b2b, #ff416c);
      border: none;
      padding: 10px 0;
      color: white;
      font-weight: bold;
      border-radius: 30px;
      cursor: pointer;
      transition: 0.3s;
    }

    .delete-btn:hover {
      transform: scale(1.05);
    }

    /* üì± Responsive */
    @media (max-width: 768px) {
      .header {
        flex-direction: column;
        gap: 10px;
        padding: 15px;
      }
      .container {
        padding: 60px 5%;
      }
    }

    /* üåà Footer */
    .footer {
      background: rgba(255, 255, 255, 0.08);
      backdrop-filter: blur(10px);
      padding: 15px;
      text-align: center;
      color: #ddd;
      font-size: 0.9rem;
    }
  </style>
  <body>
    <!-- üåÑ Background -->
    <div class="background-image"></div>

    <!-- üåê Header -->
    <header class="header">
      <div class="logo">üîó URL Shortener</div>
      <nav>
        <a href="/profile">Profile</a>
        <a href="/create">Create URL</a>
        <a href="/logout" class="logout">Logout</a>
      </nav>
    </header>

    <!-- üåü Main Container -->
    <main class="container">
      <h1>‚ú® My Shortened URLs</h1>

      <div id="urls-container" class="urls-list">
        <!-- URLs will be dynamically inserted here -->
      </div>
    </main>

    <!-- üåà Footer -->
    <footer class="footer">
      <p>¬© 2025 URL Shortener | Built with ‚ù§Ô∏è and Glassmorphism</p>
    </footer>

    <script>
      // üß† Fetch URLs for the logged-in user
      document.addEventListener("DOMContentLoaded", async () => {
        try {
          fetch("/api/v1/user/my-created-url", {
            headers: {
              "Content-Type": "application/json",
            },
            method: "POST",
          })
            .then((res) => res.json())
            .then((data) => {
              if (data?.success) {
                const urlsContainer = document.getElementById("urls-container");
                data.forEach((url) => {
                  const urlCard = document.createElement("div");
                  urlCard.classList.add("url-card");
                  urlCard.innerHTML = `
                <div class="url-info">
                  <p>Short URL: <a href="${url.shortUrl}">${url.shortUrl}</a></p>
                  <p>Long URL: <a href="${url.longUrl}">${url.longUrl}</a></p>
                </div>
                <button class="delete-btn" onclick="deleteUrl('${url._id}')">Delete</button>
              `;
                  urlsContainer.appendChild(urlCard);
                });
                }
            }
            
            )
            
        } catch (err) {
          console.error("Error loading URLs:", err);
        }
      });

      // üóë Delete URL function
      async function deleteUrl(id) {
        if (!confirm("Are you sure you want to delete this URL?")) return;
        try {
          const res = await fetch(`/api/delete-url/${id}`, {
            method: "DELETE",
          });
          const data = await res.json();
          if (data.success) {
            alert("URL deleted successfully!");
            location.reload();
          } else {
            alert("Failed to delete URL!");
          }
        } catch (error) {
          console.error(error);
        }
      }
    </script>
  </body>
</html>
